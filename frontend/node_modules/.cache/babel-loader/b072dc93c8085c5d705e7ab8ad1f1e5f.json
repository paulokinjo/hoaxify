{"ast":null,"code":"var _jsxFileName = \"/Users/paulo.kinjo/Documents/Projects/Java/hoaxify/frontend/src/components/input.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  let inputClassName = 'form-control';\n\n  if (props.hasError !== undefined) {\n    inputClassName += props.hasError ? ' is-invalid' : ' is-valid';\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [props.label && /*#__PURE__*/_jsxDEV(\"label\", {\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      className: inputClassName,\n      type: props.type || 'text',\n      placeholder: props.placeholder,\n      value: props.value,\n      onChange: props.onChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), props.hasError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"invalid-feedback\",\n      children: props.error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Input;\nInput.defaultProps = {\n  onChange: () => {}\n};\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"sources":["/Users/paulo.kinjo/Documents/Projects/Java/hoaxify/frontend/src/components/input.js"],"names":["React","Input","props","inputClassName","hasError","undefined","label","type","placeholder","value","onChange","error","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AACvB,MAAIC,cAAc,GAAG,cAArB;;AACA,MAAID,KAAK,CAACE,QAAN,KAAmBC,SAAvB,EAAkC;AAChCF,IAAAA,cAAc,IAAID,KAAK,CAACE,QAAN,GAAiB,aAAjB,GAAiC,WAAnD;AACD;;AAED,sBACE;AAAA,eACGF,KAAK,CAACI,KAAN,iBAAe;AAAA,gBAAQJ,KAAK,CAACI;AAAd;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE;AACE,MAAA,SAAS,EAAEH,cADb;AAEE,MAAA,IAAI,EAAED,KAAK,CAACK,IAAN,IAAc,MAFtB;AAGE,MAAA,WAAW,EAAEL,KAAK,CAACM,WAHrB;AAIE,MAAA,KAAK,EAAEN,KAAK,CAACO,KAJf;AAKE,MAAA,QAAQ,EAAEP,KAAK,CAACQ;AALlB;AAAA;AAAA;AAAA;AAAA,YAFF,EASGR,KAAK,CAACE,QAAN,iBACC;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA,gBAAoCF,KAAK,CAACS;AAA1C;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CArBD;;KAAMV,K;AAuBNA,KAAK,CAACW,YAAN,GAAqB;AACnBF,EAAAA,QAAQ,EAAE,MAAM,CAAE;AADC,CAArB;AAGA,eAAeT,KAAf","sourcesContent":["import React from 'react';\r\n\r\nconst Input = (props) => {\r\n  let inputClassName = 'form-control';\r\n  if (props.hasError !== undefined) {\r\n    inputClassName += props.hasError ? ' is-invalid' : ' is-valid';\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {props.label && <label>{props.label}</label>}\r\n      <input\r\n        className={inputClassName}\r\n        type={props.type || 'text'}\r\n        placeholder={props.placeholder}\r\n        value={props.value}\r\n        onChange={props.onChange}\r\n      />\r\n      {props.hasError && (\r\n        <span className=\"invalid-feedback\">{props.error}</span>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nInput.defaultProps = {\r\n  onChange: () => {},\r\n};\r\nexport default Input;\r\n"]},"metadata":{},"sourceType":"module"}