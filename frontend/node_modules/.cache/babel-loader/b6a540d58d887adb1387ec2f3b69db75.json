{"ast":null,"code":"var _jsxFileName = \"/Users/paulo.kinjo/Documents/Projects/Java/hoaxify/frontend/src/pages/UserSignupPage.js\";\nimport ButtonWithProgress from '../components/ButtonWithProgress';\nimport Input from '../components/input';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class UserSignupPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      displayName: '',\n      username: '',\n      password: '',\n      passwordRepeat: '',\n      pendingApiCall: false,\n      errors: {},\n      passwordRepeatConfirmed: true\n    };\n\n    this.onChangeDisplayName = event => {\n      const value = event.target.value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.displayName;\n      this.setState({\n        displayName: value,\n        errors\n      });\n    };\n\n    this.onChangeUsername = event => {\n      const value = event.target.value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.username;\n      this.setState({\n        username: value,\n        errors\n      });\n    };\n\n    this.onChangePassword = event => {\n      const value = event.target.value;\n      const passwordRepeatConfirmed = this.state.passwordRepeat === value;\n      const errors = { ...this.state.errors\n      };\n      delete errors.password;\n      errors.passwordRepeat = passwordRepeatConfirmed ? '' : 'Does not match to password';\n      this.setState({\n        password: value,\n        passwordRepeatConfirmed,\n        errors\n      });\n    };\n\n    this.onChangePasswordRepeat = event => {\n      const value = event.target.value;\n      const passwordRepeatConfirmed = this.state.password === value;\n      const errors = { ...this.state.errors\n      };\n      errors.passwordRepeat = passwordRepeatConfirmed ? '' : 'Does not match to password';\n      this.setState({\n        passwordRepeat: value,\n        passwordRepeatConfirmed,\n        errors\n      });\n    };\n\n    this.onClickSignup = () => {\n      const user = {\n        displayName: this.state.displayName,\n        username: this.state.username,\n        password: this.state.password\n      };\n      this.setState({\n        pendingApiCall: true\n      });\n      this.props.actions.postSignup(user).then(response => {\n        const body = {\n          username: this.state.username,\n          password: this.state.password\n        };\n        this.props.actions.postLogin(body).then(loginResponse => {\n          const action = {\n            type: 'login-success',\n            payload: { ...response.data,\n              password: this.state.password\n            }\n          };\n          this.props.dispatch(action);\n          this.setState({\n            pendingApiCall: false\n          }, () => {\n            this.props.history.push('/');\n          });\n        }).catch(error => {\n          if (error.response) {\n            this.setState({\n              apiError: error.response.data.message\n            });\n          }\n\n          this.setState({\n            pendingApiCall: false\n          });\n        });\n        this.setState({\n          pendingApiCall: false\n        }, () => {\n          this.props.history.push('/');\n        });\n      }).catch(apiError => {\n        let errors = { ...this.state.errors\n        };\n\n        if (apiError.response.data && apiError.response.data.validationErrors) {\n          errors = { ...apiError.response.data.validationErrors\n          };\n        }\n\n        this.setState({\n          pendingApiCall: false,\n          errors\n        });\n      });\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Display Name\",\n          placeholder: \"Your display name\",\n          value: this.state.displayName,\n          onChange: this.onChangeDisplayName,\n          hasError: this.state.errors.displayName && true,\n          error: this.state.errors.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Username\",\n          placeholder: \"Your username\",\n          value: this.state.username,\n          onChange: this.onChangeUsername,\n          hasError: this.state.errors.username && true,\n          error: this.state.errors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password\",\n          placeholder: \"Your password\",\n          type: \"password\",\n          value: this.state.password,\n          onChange: this.onChangePassword,\n          hasError: this.state.errors.password && true,\n          error: this.state.errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          label: \"Password Repeat\",\n          type: \"password\",\n          placeholder: \"Repeat your password\",\n          value: this.state.passwordRepeat,\n          onChange: this.onChangePasswordRepeat,\n          hasError: this.state.errors.passwordRepeat && true,\n          error: this.state.errors.passwordRepeat\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(ButtonWithProgress, {\n          onClick: this.onClickSignup,\n          disabled: this.state.pendingApiCall || !this.state.passwordRepeatConfirmed,\n          pendingApiCall: this.state.pendingApiCall,\n          text: \"Sign Up\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nUserSignupPage.defaultProps = {\n  actions: {\n    postSignup: () => new Promise((resolve, reject) => {\n      resolve({});\n    })\n  },\n  history: {\n    push: () => {}\n  }\n};\nexport default connect()(UserSignupPage);","map":{"version":3,"sources":["/Users/paulo.kinjo/Documents/Projects/Java/hoaxify/frontend/src/pages/UserSignupPage.js"],"names":["ButtonWithProgress","Input","React","connect","UserSignupPage","Component","state","displayName","username","password","passwordRepeat","pendingApiCall","errors","passwordRepeatConfirmed","onChangeDisplayName","event","value","target","setState","onChangeUsername","onChangePassword","onChangePasswordRepeat","onClickSignup","user","props","actions","postSignup","then","response","body","postLogin","loginResponse","action","type","payload","data","dispatch","history","push","catch","error","apiError","message","validationErrors","render","defaultProps","Promise","resolve","reject"],"mappings":"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","sourcesContent":["import ButtonWithProgress from '../components/ButtonWithProgress';\r\nimport Input from '../components/input';\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class UserSignupPage extends React.Component {\r\n  state = {\r\n    displayName: '',\r\n    username: '',\r\n    password: '',\r\n    passwordRepeat: '',\r\n    pendingApiCall: false,\r\n    errors: {},\r\n    passwordRepeatConfirmed: true,\r\n  };\r\n\r\n  onChangeDisplayName = (event) => {\r\n    const value = event.target.value;\r\n    const errors = { ...this.state.errors };\r\n    delete errors.displayName;\r\n    this.setState({ displayName: value, errors });\r\n  };\r\n\r\n  onChangeUsername = (event) => {\r\n    const value = event.target.value;\r\n    const errors = { ...this.state.errors };\r\n    delete errors.username;\r\n    this.setState({ username: value, errors });\r\n  };\r\n\r\n  onChangePassword = (event) => {\r\n    const value = event.target.value;\r\n    const passwordRepeatConfirmed = this.state.passwordRepeat === value;\r\n    const errors = { ...this.state.errors };\r\n    delete errors.password;\r\n    errors.passwordRepeat = passwordRepeatConfirmed\r\n      ? ''\r\n      : 'Does not match to password';\r\n    this.setState({ password: value, passwordRepeatConfirmed, errors });\r\n  };\r\n\r\n  onChangePasswordRepeat = (event) => {\r\n    const value = event.target.value;\r\n    const passwordRepeatConfirmed = this.state.password === value;\r\n    const errors = { ...this.state.errors };\r\n    errors.passwordRepeat = passwordRepeatConfirmed\r\n      ? ''\r\n      : 'Does not match to password';\r\n    this.setState({ passwordRepeat: value, passwordRepeatConfirmed, errors });\r\n  };\r\n\r\n  onClickSignup = () => {\r\n    const user = {\r\n      displayName: this.state.displayName,\r\n      username: this.state.username,\r\n      password: this.state.password,\r\n    };\r\n\r\n    this.setState({ pendingApiCall: true });\r\n    this.props.actions\r\n      .postSignup(user)\r\n      .then((response) => {\r\n        const body = {\r\n          username: this.state.username,\r\n          password: this.state.password,\r\n        };\r\n\r\n        this.props.actions\r\n          .postLogin(body)\r\n          .then((loginResponse) => {\r\n            const action = {\r\n              type: 'login-success',\r\n              payload: {\r\n                ...response.data,\r\n                password: this.state.password,\r\n              },\r\n            };\r\n\r\n            this.props.dispatch(action);\r\n            this.setState({ pendingApiCall: false }, () => {\r\n              this.props.history.push('/');\r\n            });\r\n          })\r\n          .catch((error) => {\r\n            if (error.response) {\r\n              this.setState({ apiError: error.response.data.message });\r\n            }\r\n\r\n            this.setState({ pendingApiCall: false });\r\n          });\r\n\r\n        this.setState({ pendingApiCall: false }, () => {\r\n          this.props.history.push('/');\r\n        });\r\n      })\r\n      .catch((apiError) => {\r\n        let errors = { ...this.state.errors };\r\n\r\n        if (apiError.response.data && apiError.response.data.validationErrors) {\r\n          errors = { ...apiError.response.data.validationErrors };\r\n        }\r\n\r\n        this.setState({ pendingApiCall: false, errors });\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <h1 className=\"text-center\">Sign Up</h1>\r\n        <div>\r\n          <Input\r\n            label=\"Display Name\"\r\n            placeholder=\"Your display name\"\r\n            value={this.state.displayName}\r\n            onChange={this.onChangeDisplayName}\r\n            hasError={this.state.errors.displayName && true}\r\n            error={this.state.errors.displayName}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            label=\"Username\"\r\n            placeholder=\"Your username\"\r\n            value={this.state.username}\r\n            onChange={this.onChangeUsername}\r\n            hasError={this.state.errors.username && true}\r\n            error={this.state.errors.username}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            label=\"Password\"\r\n            placeholder=\"Your password\"\r\n            type=\"password\"\r\n            value={this.state.password}\r\n            onChange={this.onChangePassword}\r\n            hasError={this.state.errors.password && true}\r\n            error={this.state.errors.password}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Input\r\n            label=\"Password Repeat\"\r\n            type=\"password\"\r\n            placeholder=\"Repeat your password\"\r\n            value={this.state.passwordRepeat}\r\n            onChange={this.onChangePasswordRepeat}\r\n            hasError={this.state.errors.passwordRepeat && true}\r\n            error={this.state.errors.passwordRepeat}\r\n          />\r\n        </div>\r\n        <div className=\"text-center\">\r\n          <ButtonWithProgress\r\n            onClick={this.onClickSignup}\r\n            disabled={\r\n              this.state.pendingApiCall || !this.state.passwordRepeatConfirmed\r\n            }\r\n            pendingApiCall={this.state.pendingApiCall}\r\n            text=\"Sign Up\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nUserSignupPage.defaultProps = {\r\n  actions: {\r\n    postSignup: () =>\r\n      new Promise((resolve, reject) => {\r\n        resolve({});\r\n      }),\r\n  },\r\n  history: {\r\n    push: () => {},\r\n  },\r\n};\r\n\r\nexport default connect()(UserSignupPage);\r\n"]},"metadata":{},"sourceType":"module"}